steps:

## Deploy arquivos YML
- id: 'Deploy GKE Frontend'
  name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernets/frontend.yml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=my-cluster-k8'

- id: 'Deploy GKE Backend'
  name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernets/backend.yml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=my-cluster-k8'

- id: 'Deploy GKE Database'
  name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernets/database.yml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=my-cluster-k8'


# Run DAST scan using OWASP ZAP in GCP DevSecOps Pipeline
- name: 'ubuntu'
  entrypoint: bash
  args: 
    - '-c'
    - |-
      apt-get update
      apt-get -y install wget
      apt-get -y install default-jdk
      wget https://github.com/zaproxy/zaproxy/releases/download/v2.11.1/ZAP_2.11.1_Linux.tar.gz
      mkdir zap
      tar -xvf ZAP_2.11.1_Linux.tar.gz
      cd ZAP_2.11.1
      ./zap.sh -cmd -quickurl https://www.example.com -quickprogress -quickout ../zap_report.html 
  id: DAST Scan using OWASP ZAP
artifacts:
  objects:
    location: 'gs://securityguro'
    paths:
      - zap_report.html





