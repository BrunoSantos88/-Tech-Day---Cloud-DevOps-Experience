steps:


### docker compilaçao do cointainer database
- id: Database
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
    docker build -t database Docker-Projetos/database/.
    docker tag database us-central1-docker.pkg.dev/bootcamp-363315/database/database
    docker push us-central1-docker.pkg.dev/bootcamp-363315/database/database

### docker compilaçao do cointainer backend
- id: backend
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
    docker build -t backend Docker-Projetos/backend/.
    docker tag backend us-central1-docker.pkg.dev/bootcamp-363315/backend/backend
    docker push us-central1-docker.pkg.dev/bootcamp-363315/backend/backend
    
## Deploy arquivos YML
- id: 'Deploy GKE namespaces'
  name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernets/namespaces.yml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-f'
  - 'CLOUDSDK_CONTAINER_CLUSTER=my-cluster-k8-dev-test'


- id: 'Deploy GKE Frontend'
  name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernets/frontend.yml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-f'
  - 'CLOUDSDK_CONTAINER_CLUSTER=my-cluster-k8-dev-test'

- id: 'Deploy GKE Backend'
  name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernets/backend.yml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-f'
  - 'CLOUDSDK_CONTAINER_CLUSTER=my-cluster-k8-dev-test'

- id: 'Deploy GKE Database'
  name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernets/database.yml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-f'
  - 'CLOUDSDK_CONTAINER_CLUSTER=my-cluster-k8-dev-test'